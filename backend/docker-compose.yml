version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: quiz-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: quiz_app
      POSTGRES_USER: quiz_user
      POSTGRES_PASSWORD: quiz_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - quiz-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U quiz_user -d quiz_app"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: quiz-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - quiz-network
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend Application
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: quiz-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: development
      PORT: 5000
      DATABASE_URL: postgresql://quiz_user:quiz_password@postgres:5432/quiz_app
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      REDIS_TTL: 7200  # 2 hours in seconds
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - quiz-network
    volumes:
      - ./src:/app/src  # For development hot reload
      - ./prisma:/app/prisma
    command: sh -c "npx prisma db push && npm run dev"

networks:
  quiz-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local